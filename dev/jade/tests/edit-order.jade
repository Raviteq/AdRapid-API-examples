extends ../template.jade

block title
  title Edit order example implementation

block description
  h1 Edit order example
  p This is a sample implementation for edit order handling
  button#getOrder Get order
  button#newOrder New order
  

block app_content
  table#orders-table
    thead
      tr
        th ID
        th Order id
        th Edit
    tbody


block form_content
  form#the_form
    #form_description
    +bar
    #form-content.row.box
    +bar


block results
  #target
    h3 Preview

block head
  link(rel="stylesheet", type="text/css", href="../assets/lib/jquery.minicolors.css")

mixin bar
  button.button.send Send order
  button.button.back Go back

block scripts
  script(type="text/javascript", src="../assets/lib/jquery.minicolors.min.js")
  script(type="text/javascript").

    // config
    var projects = []; // list of template
    var api_key = '6271f323ff24875b74569ebc76eafa7c8ce0aa85';
    var templateId = '22bc0b7770842cc6310b25fec2346b8252f31ecf';
    var adrapid = new AdRapid(api_key);
    var globalorderID = 17922;
    var globalOrderData = {}; // our orders "db"

    // dummy order data
    var orderData = {
      1: {
        orderID: 10400,
        userID: 123,
        templateID: templateId,
      },
      2: {
        orderID: 10500,
        userID: 123,
        templateID: templateId,
      },
      3: {
        orderID: 10600,
        userID: 123,
        templateID: templateId,
      },
    };

    // initialize app
    init();


    // main initialize functio
    function init() {
      // unset user data
      //- localStorage.removeItem('orders');

      adrapid.templates().then(setup_templates);
      populateData();
      populateTable();
    }

    // populate
    function populateData() {
      
      // check for localStorage data - if populated we should use those  
      if(localStorage.getItem('orders') === null) {
        // does not exist
        localStorage.setItem('orders', JSON.stringify(orderData));
        globalOrderData = orderData;
      } else {
        // exists, set from localStorage data
        //- localStorage.setItem('orders', JSON.stringify(orderData)); // deb
        globalOrderData = JSON.parse(localStorage.getItem('orders'));
      }
    }

    function populateTable() {
      $.each(globalOrderData, function(i, row) {
        addTableRow(i, row);
      });
    }

    function newOrder() {
      console.log(' Will do new order .. ');

      // show templates 
      $('.template').show();
      //- $('#orders-table').hide();
    }


    // bind events
    // ------------------------------------------------------------

    // temp get order 
    $('#getOrder').click(function(e) {
      e.preventDefault();
      editOrder(1); // edit first order
    });

    // create a new order
    $('#newOrder').on('click', newOrder);

    // edit orders
    $('tbody a').on( "click", function() {
      editOrder($(this).attr('data-orderID'));
      console.log($(this).text() + ' -> ' + $(this).attr('data-orderID'));
    });

    $('#the_form button, #form').hide();



    // addiational order helpers
    // ------------------------------------------------------------

    function setup_templates(templates) {
      $.each(templates, function(i, data) {
        projects[data.identifier] = data.templateId; // add project API key to array of available projects
        $('#templates').append('<div class="template hide" name="' + data.identifier + '"><img src="' + data.thumbnail + '" style="width: 100%; " title="' + data.name + '" /></div>'); // append template to UI
      });
      bind_buttons();
    }

    function filter_templates(templates) {
      return templates.filter(function(template) {
        return template.group == 'offer';
      });
    }

    function bind_buttons() {

      // load html5 live preview
      $('.template').click(function(event) {
        $('#form, #templates').toggle();
        $('#target').html('<h3>Loading..</h3>');
        template_key = projects[$(this).attr('name')];
        loadForm(template_key, function() {
          console.log('Form was loaded...');

        });
        //- getLivePreview(template_key);
        console.log($(this).attr('name'));
        console.log('Load form for key: ' + template_key);
      });
      
      // when the form is submitted, handle sending the order to AdRapid
      $('.send').on('click', function(event) {
        event.preventDefault();
        sendOrder().then(createOrder);
      });

      // handle back button
      $('.back').on('click', function(event) {
        event.preventDefault();
        $('#form, #templates').toggle();
      });

    }

    // send order to AdRapid
    // TODO: maintain correct templateId;
    function sendOrder(templateId) {
      //- if(!templateId) templateId = projects[$('.active').attr('name')];
      templateId = '22bc0b7770842cc6310b25fec2346b8252f31ecf';

      var order             = $('form#the_form').serializeObject();
          order.templateId  = templateId;
      
      // TODO: needs to return orderID
      return adrapid.sendOrder(order);
    }

    // watch order helper function
    function watchOrder(order, options) {

    }

    // add a new order to our orders object, update our dv
    function createOrder(order, templateId) {
      
      // setup watch event for the order
      helpers.watchOrder(order);
      
      // add the order to our orders object/"db"
      var newId = globalOrderData.length + 1;
      globalOrderData[newId] = {
        orderID: order.order_id,
        userID: 123,
        templateID: templateId,
      };

      // update the db/localStorage
      localStorage.setItem('orders', JSON.stringify(globalOrderData));

      // add row to the orders table
      addTableRow(newId, globalOrderData[newId]);
    }

    // edit order
    function editOrder(orderID) {
      var orderData = globalOrderData[orderID]; 

      // load the form using the default content
      loadForm(orderData.templateID, function() {

        // get the data for the item
        adrapid.getOrderData(orderData.orderID).then(function(orderData) {
          
          // update the form fields with the values stored 
          // in the order data of the selected order
          $.each(orderData, function(key, val) {
            $('input[name=' + key + ']').val(val);
          });

          // re-bind save order event
          setTimeout(function() {

            $('#render, .send').off().on('click', function(e) {
              e.preventDefault();
              $('#orders-table').show();
                  
              // send the order to adrapid
              sendOrder(orderData.templateID).then(function(orderData) {
                
                // update the orders table for this order
                globalOrderData[orderID].orderID = orderData.order_id; // set the new orderID
                localStorage.setItem('orders', JSON.stringify(globalOrderData));

                return orderData;
              })
              .then(helpers.watchOrder);
            });
          }, 2500);

        });
        
      });

    }

    // load form helper
    function loadForm(template, callback) {
      console.log('Will load form for template ' + template);

      adrapid.rules(template).then(function(rules) {
        helpers.buildForm(rules, template, {
          selector: '#form-content',
          //- before: function() {
          //-   $('#the_form button, .form_placeholder').toggle();
          //- },
          complete: function(data) {
            helpers.addUploadHelpers();
            helpers.addColorPickers();
            
            // some elems fixes
            $('.loader').fadeOut();
            $('#the_form button, #form').show();
            $('.form_placeholder, #templates').hide();

            // append live preview
            getLivePreview(template);

            if(callback) callback();
          }
        });
      });

      $('#templates, #form').toggle();
    }

    function getLivePreview(template_key) {
      helpers.template_key = template_key;      // store template key in helpers object.. secret fix
      //- helpers.getForm(template_key);            // get the form for the template
      helpers.getLivePreview(template_key);     // get the live preview, bind form events
    }

    function log(content) {
      console.log(content);
      return content;
    }

    function addTableRow(i, row) {
      var output = '<tr><td>' + row.orderID + '</td><td>' + i + '</td><td><a href="#" class="button edit_order small" data-orderID="' + i + '">Edit</a></td></tr>';
      $('tbody').append(output);
    }