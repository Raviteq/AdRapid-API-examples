extends ../template.jade

block title
  title Edit order example implementation

block description
  h1 Edit order example
  p This is a sample implementation for edit order handling
  button#getOrder Get order
  button#newOrder New order
  

block app_content
  table#orders-table
    thead
      tr
        th ID
        th Order id
        th
    tbody


block form_content
  form#the_form
    #form_description
    +bar
    #form-content.row.box
    +bar


block results
  #target
    h3 Preview

block head
  link(rel="stylesheet", type="text/css", href="../assets/lib/jquery.minicolors.css")

mixin bar
  button.button.send Send order
  button.button.back Go back

block scripts
  script(type="text/javascript", src="../assets/lib/jquery.minicolors.min.js")
  script(type="text/javascript").

    // config
    var projects = []; // list of template
    var api_key = '6271f323ff24875b74569ebc76eafa7c8ce0aa85';
    var templateId = '22bc0b7770842cc6310b25fec2346b8252f31ecf';
    var adrapid = new AdRapid(api_key);
    var globalorderID = 17922;
    var globalOrderData = {}; // our orders "db"

    // dummy order data
    var orderData = {
      1: {
        orderID: 10400,
        userID: 123,
        templateID: templateId,
      },
      2: {
        orderID: 10500,
        userID: 123,
        templateID: templateId,
      },
      3: {
        orderID: 10600,
        userID: 123,
        templateID: templateId,
      },
    };

    // initialize app
    init();


    // main initialize functio
    function init() {
      adrapid.templates().then(setup_templates);
      populateData();
      populateTable();
    }

    // populate
    function populateData() {
      
      // check for localStorage data - if populated we should use those  
      if(localStorage.getItem('orders') === null) {
        // does not exist
        localStorage.setItem('orders', JSON.stringify(orderData));
        globalOrderData = orderData;
      } else {
        // exists, set from localStorage data
        //- localStorage.setItem('orders', JSON.stringify(orderData)); // deb
        globalOrderData = JSON.parse(localStorage.getItem('orders'));
      }
    }

    function populateTable() {
      var output = '';

      $.each(globalOrderData, function(i, row) {
        output += '<tr><td>' + row.orderID + '</td><td>' + i + '</td><td><a href="#" class="button edit_order small" data-orderID="' + i + '">Edit</a></td></tr>';
      });

      $('tbody').html(output);
    }

    function saveEditOrderCallback(order) {
      // ... 
    }

    function sendOrderCallback(orderData) {
      // ... 
    }

    function editOrder(orderID) {
      var orderData = globalOrderData[orderID];

      console.log('Edit order:');
      console.log(orderData);

      // load the form using the default content
      loadForm(orderData.templateID, function() {

        // get the data for the item
        adrapid.getOrderData(orderData.orderID).then(function(orderData) {
          
          $.each(orderData, function(key, val) {
            $('input[name=' + key + ']').val(val);
          });

          // re-bind save order event
          setTimeout(function() {
            $('#render').on('click', function(e) {
              e.preventDefault();
              console.log('We do render');
              $('#orders-table').show();
              sendOrder(orderData.templateID);
            });
          }, 2500);

        });
      
        
      });

    }

    function newOrder() {
      console.log(' Will do new order .. ');

      // show templates 
      $('.template').show();
      $('#orders-table').hide();
    }


    // bind events
    // ------------------------------------------------------------

    $('#getOrder').click(function(e) {
      e.preventDefault();
      editOrder(globalorderID);
    });

    $('#newOrder').on('click', newOrder);

    $('tbody a').on( "click", function() {
      editOrder($(this).attr('data-orderID'));
      console.log($(this).text() + ' -> ' + $(this).attr('data-orderID'));
    });

    $('#the_form button, #form').hide();



    // addiational order helpers
    // ------------------------------------------------------------

    function setup_templates(templates) {
      console.log('Setting up templates..');
      console.log(templates);
      console.log('--------------------------------------');

      $.each(templates, function(i, data) {
        projects[data.identifier] = data.templateId; // add project API key to array of available projects
        $('#templates').append('<div class="template hide" name="' + data.identifier + '"><img src="' + data.thumbnail + '" style="width: 100%; " title="' + data.name + '" /></div>'); // append template to UI
      });

      bind_buttons();
    }

    function filter_templates(templates) {
      return templates.filter(function(template) {
        return template.group == 'offer';
      });
    }

    function bind_buttons() {

      //- load html5 live preview
      $('.template').click(function(event) {
        $('#form, #templates').toggle();
        $('#target').html('<h3>Loading..</h3>');
        template_key = projects[$(this).attr('name')];
        getLivePreview(template_key);
        //- loadForm(template_key);
      });
      
      // when the form is submitted, handle sending the order to AdRapid
      $('.send').click(function(event) {
        event.preventDefault();
        sendOrder().then(createOrder);
      });

      // handle back button
      $('.back').click(function(event) {
        event.preventDefault();
        $('#form, #templates').toggle();
      });

    }

    function sendOrder(templateId) {
      //- if(!templateId) templateId = projects[$('.active').attr('name')];
      templateId = '22bc0b7770842cc6310b25fec2346b8252f31ecf';

      var order             = $('form#the_form').serializeObject();
          order.templateId  = templateId,

      console.log('Debug orders object:');
      console.log(order);
      
      // TODO: needs to return orderID
      adrapid.sendOrder(order).then(helpers.watchOrder);
    }

    function createOrder(order, templateId) {
      console.log('Create order object:');
      console.log(order);

      sendOrder(templateId)
        .then(function(order) {

        });
      ;

      // save the orders object in localStorage
      globalOrderData[500] = {
        orderID: 11500,
        userID: 123,
        templateID: templateId, // '22bc0b7770842cc6310b25fec2346b8252f31ecf',
      };

      localStorage.setItem('orders', JSON.stringify(globalOrderData));
    }

    // load form helper
    function loadForm(template, callback) {
      console.log('Will load form for template ' + template);

      adrapid.rules(template).then(function(rules) {
        helpers.buildForm(rules, template, {
          selector: '#form-content',
          //- before: function() {
          //-   $('#the_form button, .form_placeholder').toggle();
          //- },
          complete: function(data) {
            helpers.addUploadHelpers();
            helpers.addColorPickers();
            
            // some elems fixes
            $('.loader').fadeOut();
            $('#the_form button').show();
            $('.form_placeholder').hide();
            $('#form_description').html(
              '<h2>' + rules.title + '</h2>' +
              '<p>Below a form has bee created using the <code>template rules</code> for the selected template.</p>'
            );

            // add callback action to order rendering
            $('#render').on('click', sendOrder);

            // append live preview
            getLivePreview(template);

            if(callback) callback();
          }
        });
      });

      $('#templates, #form').toggle();
    }

    // additional helper functions
    function getLivePreview(template_key) {
    
      helpers.template_key = template_key;      // store template key in helpers object.. secret fix
      //- helpers.getForm(template_key);            // get the form for the template
      helpers.getLivePreview(template_key);     // get the live preview, bind form events

      setTimeout(function(){
        console.log('Grab button ...');
        // add a 'render' button to the form
        $('#form').prepend('<button id="render" class="button blue">Render!</button>');
      }, 2000)
    }



    // helper functions
    // --------------------------------------------------------------

    function log(content) {
      console.log(content);
      return content;
    }
