extends ../template.jade

block title
  title Image crop example

block description
  -image = 'http://test.adrapid.com/thumbnail/500/uploads/client_uploads/demo/img//1c1e3a_Purple-Flower-7.jpg'

  h3 Image crop example
  p Sample implementation of the image crop functionality. Documentation is available <a href="http://raviteq.github.io/adrapid-api/#crop">http://raviteq.github.io/adrapid-api/#crop</a>. This perticular example is using the <a href="http://odyniec.net/projects/imgareaselect/usage.html">imgAreaSelect</a> library for the crop tool frontend.

  div.bordered
    p Upload an image
    #upload

    p ...or select an image
    select(name='switch')

  form#crop_form
    p These values will be posted to the crop method. In a real-world scenario, the form field will be hidden for the end user. We keep track of the width of the thumbnail to be able to send crop values as percentages.


    div
      label(for='image') Image
      input(name="image", value="#{image}", placeholder="image")
    
    div
      label(for='x') X
      input(name="x", placeholder="x")
    
    div
      label(for='y') Y
      input(name="y", placeholder="y")
    
    div
      label(for='width') Width
      input(name="width", placeholder="width")
    
    div
      label(for='height') Height
      input(name="height", placeholder="height")
    
  form#extra.full
    p These values are for illustrative purposes only
    
    div
      label(for='thumbnail_width') Thumbnail width
      input(name="thumbnail_width", placeholder="thumbnail_width")
    
    div
      label(for='x1_') X1
      input(name="x1_", placeholder="x1")
    
    div
      label(for='y1_') Y1
      input(name="y1_", placeholder="y1")
    
    div
      label(for='x2_') X2
      input(name="x2_", placeholder="x2")
    
    div
      label(for='y2_') Y2
      input(name="y2_", placeholder="y2")
    
    div
      label(for='width_') Width (px)
      input(name="width_", placeholder="width")
    
    div
      label(for='height_') Height (px)
      input(name="height_", placeholder="height")
    
    div
      label(for='x2_relative') X2 (relative)
      input(name="x2_relative", placeholder="x2_relative")
    
    div
      label(for='y2_relative') Y2 (relative)
      input(name="y2_relative", placeholder="y2_relative")

block head
  link(rel='stylesheet', type='text/css', href='../assets/lib/jquery.imgareaselect-0.9.10/css/imgareaselect-animated.css')

block results
  .flex
    .box
      img#cropzone(src="#{image}")
      button#crop-button Crop!
    .box
      img#preview

block form

block scripts
  script(type="text/javascript", src="../assets/lib/jquery.imgareaselect-0.9.10/jquery.imgareaselect.min.js")
  script(type="text/javascript", src="../assets/lib/imagesloaded.pkgd.min.js")
  script(type="text/javascript").
    var adrapid = new AdRapid('6271f323ff24875b74569ebc76eafa7c8ce0aa85');
    var width = $('#cropzone').width();
    var height = $('#cropzone').height();


      
    // initialize cropzone
    var cropTool = $('#cropzone').imgAreaSelect({ 
      fadeSpeed: 450, 
      handles: true,
      instance: true,
      x1: width/4, y1: height/4, x2: width-(width/4), y2: height-(height/4), // set initial selection
      // aspectRatio: '1:1', // lock aspect ratio 

      onInit: function (img, selection) {
        console.log('Set initial selection...');
        set_selection(selection, img);
      },

      // NOTE: dont do this calculation every time, only need to do it on select end.
      onSelectChange: function (img, selection) {
        set_selection(selection, img);
      },

      onSelectEnd: function(img, selection) {
        set_selection(selection, img);
      }

    });

    // cropzone helper functions
    function set_selection(selection, img) {
      width = $('#cropzone').width();

      // neccessarry to set these values
      $('input[name=x]').val(getPercentage(selection.x1));
      $('input[name=y]').val(getPercentage(selection.y1));
      $('input[name=width]').val(getPercentage(selection.width));
      $('input[name=height]').val(getPercentage(selection.height));
      $('input[name=thumbnail_width]').val(width);

      // for demo purposes only      
      $('input[name=x1_]').val(selection.x1);
      $('input[name=x2_]').val(selection.x2);
      $('input[name=y1_]').val(selection.y1);
      $('input[name=y2_]').val(selection.y2);
      $('input[name=width_]').val(selection.width);
      $('input[name=height_]').val(selection.height);
      $('input[name=x2_relative]').val(getPercentage(selection.x2));
      $('input[name=y2_relative]').val(getPercentage(selection.y2));
    }

    function getPercentage(part, full) {
      if(!full) full = width;
      return parseFloat((part / full) * 100).toFixed(4) + '%';
      //- return Math.round((part / full) * 100) + '%';
    }

    function perform_crop() {
      var data = $('#crop_form').serializeArray();
      $('#spinner').fadeIn();

      // cropTool.cancelSelection(); // remove selection

      console.log('Sending crop request with data:');
      console.log($('#crop_form').serializeObject());

      helpers.uploadMedia(data).then(function(result) {
        $('#preview').attr('src', result.image.preview);
        $('#spinner').fadeOut();
      });
    }

    $('#crop-button').click(function(e) {
      perform_crop();      
    });


    // init a image select function
    var images = {
      'Flower': 'http://test.adrapid.com/uploads/client_uploads/demo/img/180bf8_Purple-Flower-7_preview.jpg',
      '> 100MP galaxy': 'http://test.adrapid.com/uploads/client_uploads/demo/img/7c7c52_carina_nebula_preview.jpg',
      'Overlays': 'http://test.adrapid.com/uploads/client_uploads/demo/img/681b75_Lightroom-Crop-Grid-Overlay_preview.jpg',
    };

    var output = [];

    $.each(images, function(val, key) {
      output.push('<option value="' + key + '">' + val + '</option>');
    });

    $('select[name=switch]').html(output.join(''));

    $('select[name=switch]').change(function(event) {
      var val = $(this).val();
      $('#cropzone').attr('src', val);
      $('input[name=image]').val(val);
      cropTool.update(); // re-draw cropTool selection, preventing issues if the ratio of the image has changed
    });

    // trigger select on the first value
    //- $('select[name=switch]').trigger('change');

    // attach a file upload helper
    helpers.uploadHelper({
      element: '#upload',
      begin: function() {
        $('#spinner').fadeIn();
      },
      complete: function(data) {
        $('#spinner').fadeOut();
        $('#cropzone').attr('src', data.preview);
        $('input[name=image]').val(data.preview);
      },
    });

    function setCropInitial() {
      // TODO: preserve selected area
      //- var current = cropTool.getSelection();
      //- console.log(current);
      
      width = $('#cropzone').width();
      height = $('#cropzone').height();
      cropTool.setSelection(width/4, height/4, width-(width/4), height-(height/4), true).update();
    }

    $(window).resize(function() {
      setCropInitial();
    });

  });