extends ../template.jade

block title
  title Image crop example

block description
  -image = 'http://test.adrapid.com/thumbnail/500/uploads/client_uploads/demo/img//1c1e3a_Purple-Flower-7.jpg'

  h3 Image crop example
  p Sample implementation of the image crop functionality. Documentation is available <a href="http://raviteq.github.io/adrapid-api/#crop">http://raviteq.github.io/adrapid-api/#crop</a>. This perticular example is using the <a href="http://odyniec.net/projects/imgareaselect/usage.html">imgAreaSelect</a> library for the crop tool frontend.

  div.bordered
    div
      label Upload an image
      #upload

    div
      label ...or select an image
      select(name='switch')
        option(value='http://test.adrapid.com/uploads/client_uploads/demo/img/180bf8_Purple-Flower-7_preview.jpg') Flower
        option(value='http://test.adrapid.com/uploads/client_uploads/demo/img/7c7c52_carina_nebula_preview.jpg') > 100MP galaxy
        option(value='http://test.adrapid.com/uploads/client_uploads/demo/img/681b75_Lightroom-Crop-Grid-Overlay_preview.jpg') Overlays

    div
      label set aspect ratio
      select(name='ratio')
        option(value='') Any
        option(value='1:1') 1:1
        option(value='1:3') 1:3
        option(value='3:1') 3:1
        option(value='2:1') 2:1

  form#crop_form
    p These values will be posted to the crop method. In a real-world scenario, the form field will be hidden for the end user. We keep track of the width of the thumbnail to be able to send crop values as percentages.

    div
      label(for='image') Image
      input(name="image", value="#{image}", placeholder="image")
    
    div
      label(for='x') X
      input(name="x", placeholder="x")
    
    div
      label(for='y') Y
      input(name="y", placeholder="y")
    
    div
      label(for='width') Width
      input(name="width", placeholder="width")
    
    div
      label(for='height') Height
      input(name="height", placeholder="height")
    
  form#extra.full
    p These values are for illustrative purposes only
    
    div
      label(for='thumbnail_width') Thumbnail width
      input(name="thumbnail_width", placeholder="thumbnail_width")
    
    div
      label(for='x1_') X1
      input(name="x1_", placeholder="x1")
    
    div
      label(for='y1_') Y1
      input(name="y1_", placeholder="y1")
    
    div
      label(for='x2_') X2
      input(name="x2_", placeholder="x2")
    
    div
      label(for='y2_') Y2
      input(name="y2_", placeholder="y2")
    
    div
      label(for='width_') Width (px)
      input(name="width_", placeholder="width")
    
    div
      label(for='height_') Height (px)
      input(name="height_", placeholder="height")
    
    div
      label(for='x2_relative') X2 (relative)
      input(name="x2_relative", placeholder="x2_relative")
    
    div
      label(for='y2_relative') Y2 (relative)
      input(name="y2_relative", placeholder="y2_relative")

block head
  link(rel='stylesheet', type='text/css', href='../assets/lib/jquery.imgareaselect-0.9.10/css/imgareaselect-animated.css')

block results
  .flex
    .box
      img#cropzone(src="#{image}")
      button#crop-button Crop!
    .box
      a#show(href='#', target='_blank')
        img#preview

block form

block scripts
  script(type="text/javascript", src="../assets/lib/jquery.imgareaselect-0.9.10/jquery.imgareaselect.min.js")
  script(type="text/javascript", src="../assets/lib/imagesloaded.pkgd.min.js")
  script(type="text/javascript").
    
    // config
    ////////////////////////////////////////////////////

    var adrapid = new AdRapid('6271f323ff24875b74569ebc76eafa7c8ce0aa85'); // initialize AdRapid
    var width = $('#cropzone').width();
    var height = $('#cropzone').height();
    var pixel = 'http://test.adrapid.com/img/assets/pixel.png';
      
    // Initialize the crop tool
    // This perticular example is using imgAreaSelect.
    // Documentation available at http://odyniec.net/projects/imgareaselect/
    ////////////////////////////////////////////////////
    
    var cropTool = $('#cropzone').imgAreaSelect({ 
      fadeSpeed: 450, 
      handles: true,
      instance: true,
      x1: width/4, y1: height/4, x2: width-(width/4), y2: height-(height/4), // set initial selection
      // aspectRatio: '1:1', // lock aspect ratio 

      onInit: function (img, selection) {
        console.log('Set initial selection...');
        set_selection(selection, img);
      },

      // NOTE: don't do this calculation every time selection
      // is changed, only need to do it on select end or when
      // the user clicks the crop button.
      onSelectChange: function (img, selection) {
        set_selection(selection, img);
      },

      onSelectEnd: function(img, selection) {
        set_selection(selection, img);
      }

    });

    // cropzone helper functions
    function set_selection(selection, img) {
      width = $('#cropzone').width(); // re-calculate width of thumbnail - user may have resized the window

      // neccessarry to set these values
      $('input[name=x]').val(getPercentage(selection.x1));
      $('input[name=y]').val(getPercentage(selection.y1));
      $('input[name=width]').val(getPercentage(selection.width));
      $('input[name=height]').val(getPercentage(selection.height));
      $('input[name=thumbnail_width]').val(width);

      // for demo purposes only      
      $('input[name=x1_]').val(selection.x1);
      $('input[name=x2_]').val(selection.x2);
      $('input[name=y1_]').val(selection.y1);
      $('input[name=y2_]').val(selection.y2);
      $('input[name=width_]').val(selection.width);
      $('input[name=height_]').val(selection.height);
      $('input[name=x2_relative]').val(getPercentage(selection.x2));
      $('input[name=y2_relative]').val(getPercentage(selection.y2));
    }

    function getPercentage(part, full) {
      if(!full) full = width;
      return parseFloat((part / full) * 100).toFixed(4) + '%';
      //- return Math.round((part / full) * 100) + '%';
    }

    function perform_crop() {
      var data = $('#crop_form').serializeArray();
      $('#spinner').fadeIn();

      // cropTool.cancelSelection(); // remove selection

      console.log('Sending crop request with data:');
      console.log($('#crop_form').serializeObject());

      helpers.uploadMedia(data).then(function(result) {
        $('#preview').attr('src', result.image.preview); // update preview with cropped preview thumbnail
        $('#show').attr('href', result.image.preview.replace('_preview', '')); // update link to full-size result
        $('#spinner').fadeOut();
      });
    }

    $('#crop-button').click(function(e) {
      perform_crop();      
    });

    // create an image select function
    ////////////////////////////////////////////////////

    $('select[name=switch]').change(function(event) {
      var val = $(this).val();
      $('#cropzone').attr('src', val);
      $('input[name=image]').val(val);
      $('#preview').attr('src', pixel);
      cropTool.update(); // re-draw cropTool selection, preventing issues if the ratio of the image has changed
    });

    // trigger select on the first value
    $('select[name=switch]').trigger('change');

    // attach a file upload helper
    ////////////////////////////////////////////////////
    
    helpers.uploadHelper({
      element: '#upload',
      begin: function() {
        $('#spinner').fadeIn();
      },
      complete: function(data) {
        $('#spinner').fadeOut();
        $('#cropzone').attr('src', data.preview);
        $('input[name=image]').val(data.preview);
        $('#preview').attr('src', pixel); // remove crop preview image
        cropTool.update(); // re-calculate cropTool area since aspect ratio may have changed since last image
      },
    });

    // handle aspect ratio change
    ////////////////////////////////////////////////////

    $('select[name=ratio]').change(function(event) {
      cropTool.setOptions({
        aspectRatio: $(this).val()
      })
      .update();
    });

    // handle browser window resize
    ////////////////////////////////////////////////////

    function responsiveSelection() {
      //- TODO: preserve selected area
      //- var currentWidth = width;
      //- var current = cropTool.getSelection();
      //- console.log(current);
      
      width = $('#cropzone').width();
      height = $('#cropzone').height();
      cropTool.setSelection(width/4, height/4, width-(width/4), height-(height/4), true).update();
    }

    $(window).resize(function() {
      responsiveSelection();
    });

  });